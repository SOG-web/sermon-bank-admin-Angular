{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport * as i5 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport * as i4 from '@ngx-formly/core';\nimport { FormlyModule } from '@ngx-formly/core';\nimport * as i6 from '@ngx-formly/core/select';\nimport { FormlySelectModule } from '@ngx-formly/core/select';\nimport { FieldType, FormlyMatFormFieldModule } from '@ngx-formly/material/form-field';\nimport * as i2 from '@angular/material/select';\nimport { MatSelectModule } from '@angular/material/select';\nimport * as i1 from '@angular/material/core';\nimport { MatPseudoCheckboxModule } from '@angular/material/core';\n\nfunction FormlyFieldSelect_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-option\", 3);\n    i0.ɵɵlistener(\"click\", function FormlyFieldSelect_ng_template_0_Template_mat_option_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const selectOptions_r3 = restoredCtx.selectOptions;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.toggleSelectAll(selectOptions_r3));\n    });\n    i0.ɵɵelement(1, \"mat-pseudo-checkbox\", 4);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const selectOptions_r3 = ctx.selectOptions;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"state\", ctx_r1.getSelectAllState(selectOptions_r3));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.props.selectAllOption, \" \");\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    selectOptions: a0\n  };\n};\n\nfunction FormlyFieldSelect_ng_container_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 7);\n  }\n\n  if (rf & 2) {\n    const selectOptions_r6 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵnextContext();\n\n    const _r0 = i0.ɵɵreference(1);\n\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r0)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c0, selectOptions_r6));\n  }\n}\n\nfunction FormlyFieldSelect_ng_container_3_ng_container_2_mat_optgroup_1_mat_option_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const child_r14 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", child_r14.value)(\"disabled\", child_r14.disabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", child_r14.label, \" \");\n  }\n}\n\nfunction FormlyFieldSelect_ng_container_3_ng_container_2_mat_optgroup_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-optgroup\", 10);\n    i0.ɵɵtemplate(1, FormlyFieldSelect_ng_container_3_ng_container_2_mat_optgroup_1_mat_option_1_Template, 2, 3, \"mat-option\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r10 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"label\", item_r10.label);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", item_r10.group);\n  }\n}\n\nfunction FormlyFieldSelect_ng_container_3_ng_container_2_mat_option_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r10 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"value\", item_r10.value)(\"disabled\", item_r10.disabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(item_r10.label);\n  }\n}\n\nfunction FormlyFieldSelect_ng_container_3_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, FormlyFieldSelect_ng_container_3_ng_container_2_mat_optgroup_1_Template, 2, 2, \"mat-optgroup\", 8);\n    i0.ɵɵtemplate(2, FormlyFieldSelect_ng_container_3_ng_container_2_mat_option_2_Template, 2, 3, \"mat-option\", 9);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r10 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r10.group);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !item_r10.group);\n  }\n}\n\nfunction FormlyFieldSelect_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, FormlyFieldSelect_ng_container_3_ng_container_1_Template, 1, 4, \"ng-container\", 5);\n    i0.ɵɵtemplate(2, FormlyFieldSelect_ng_container_3_ng_container_2_Template, 3, 2, \"ng-container\", 6);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const selectOptions_r6 = ctx.ngIf;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.props.multiple && ctx_r2.props.selectAllOption);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", selectOptions_r6);\n  }\n}\n\nlet FormlyFieldSelect = /*#__PURE__*/(() => {\n  class FormlyFieldSelect extends FieldType {\n    constructor() {\n      super(...arguments);\n      this.defaultOptions = {\n        props: {\n          compareWith(o1, o2) {\n            return o1 === o2;\n          }\n\n        }\n      };\n    }\n\n    getSelectAllState(options) {\n      if (this.empty || this.value.length === 0) {\n        return null;\n      }\n\n      return this.value.length !== this.getSelectAllValue(options).length ? 'indeterminate' : 'checked';\n    }\n\n    toggleSelectAll(options) {\n      const selectAllValue = this.getSelectAllValue(options);\n      this.formControl.setValue(!this.value || this.value.length !== selectAllValue.length ? selectAllValue : []);\n      this.formControl.markAsDirty();\n    }\n\n    change($event) {\n      var _a, _b;\n\n      (_b = (_a = this.props).change) === null || _b === void 0 ? void 0 : _b.call(_a, this.field, $event);\n    }\n\n    _getAriaLabelledby() {\n      var _a, _b;\n\n      if ((_a = this.props.attributes) === null || _a === void 0 ? void 0 : _a['aria-labelledby']) {\n        return this.props.attributes['aria-labelledby'];\n      }\n\n      return (_b = this.formField) === null || _b === void 0 ? void 0 : _b._labelId;\n    }\n\n    _getAriaLabel() {\n      var _a;\n\n      return (_a = this.props.attributes) === null || _a === void 0 ? void 0 : _a['aria-label'];\n    }\n\n    getSelectAllValue(options) {\n      if (!this.selectAllValue || options !== this.selectAllValue.options) {\n        const flatOptions = [];\n        options.forEach(o => o.group ? flatOptions.push(...o.group) : flatOptions.push(o));\n        this.selectAllValue = {\n          options,\n          value: flatOptions.filter(o => !o.disabled).map(o => o.value)\n        };\n      }\n\n      return this.selectAllValue.value;\n    }\n\n  }\n\n  FormlyFieldSelect.ɵfac = /* @__PURE__ */function () {\n    let ɵFormlyFieldSelect_BaseFactory;\n    return function FormlyFieldSelect_Factory(t) {\n      return (ɵFormlyFieldSelect_BaseFactory || (ɵFormlyFieldSelect_BaseFactory = i0.ɵɵgetInheritedFactory(FormlyFieldSelect)))(t || FormlyFieldSelect);\n    };\n  }();\n\n  FormlyFieldSelect.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: FormlyFieldSelect,\n    selectors: [[\"formly-field-mat-select\"]],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 6,\n    vars: 19,\n    consts: [[\"selectAll\", \"\"], [3, \"id\", \"formControl\", \"formlyAttributes\", \"placeholder\", \"tabIndex\", \"required\", \"compareWith\", \"multiple\", \"errorStateMatcher\", \"aria-label\", \"aria-labelledby\", \"disableOptionCentering\", \"typeaheadDebounceInterval\", \"selectionChange\"], [4, \"ngIf\"], [3, \"click\"], [1, \"mat-option-pseudo-checkbox\", 3, \"state\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\", 4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"label\", 4, \"ngIf\"], [3, \"value\", \"disabled\", 4, \"ngIf\"], [3, \"label\"], [3, \"value\", \"disabled\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\", \"disabled\"]],\n    template: function FormlyFieldSelect_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, FormlyFieldSelect_ng_template_0_Template, 3, 2, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementStart(2, \"mat-select\", 1);\n        i0.ɵɵlistener(\"selectionChange\", function FormlyFieldSelect_Template_mat_select_selectionChange_2_listener($event) {\n          return ctx.change($event);\n        });\n        i0.ɵɵtemplate(3, FormlyFieldSelect_ng_container_3_Template, 3, 2, \"ng-container\", 2);\n        i0.ɵɵpipe(4, \"async\");\n        i0.ɵɵpipe(5, \"formlySelectOptions\");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"id\", ctx.id)(\"formControl\", ctx.formControl)(\"formlyAttributes\", ctx.field)(\"placeholder\", ctx.props.placeholder)(\"tabIndex\", ctx.props.tabindex)(\"required\", ctx.required)(\"compareWith\", ctx.props.compareWith)(\"multiple\", ctx.props.multiple)(\"errorStateMatcher\", ctx.errorStateMatcher)(\"aria-label\", ctx._getAriaLabel())(\"aria-labelledby\", ctx._getAriaLabelledby())(\"disableOptionCentering\", ctx.props.disableOptionCentering)(\"typeaheadDebounceInterval\", ctx.props.typeaheadDebounceInterval);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(4, 14, i0.ɵɵpipeBind2(5, 16, ctx.props.options, ctx.field)));\n      }\n    },\n    dependencies: [i1.MatOption, i1.MatPseudoCheckbox, i2.MatSelect, i1.MatOptgroup, i3.NgControlStatus, i3.FormControlDirective, i4.ɵFormlyAttributes, i3.RequiredValidator, i5.NgIf, i5.NgTemplateOutlet, i5.NgForOf, i5.AsyncPipe, i6.FormlySelectOptionsPipe],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return FormlyFieldSelect;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nlet FormlyMatSelectModule = /*#__PURE__*/(() => {\n  class FormlyMatSelectModule {}\n\n  FormlyMatSelectModule.ɵfac = function FormlyMatSelectModule_Factory(t) {\n    return new (t || FormlyMatSelectModule)();\n  };\n\n  FormlyMatSelectModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: FormlyMatSelectModule\n  });\n  FormlyMatSelectModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[CommonModule, ReactiveFormsModule, MatSelectModule, MatPseudoCheckboxModule, FormlyMatFormFieldModule, FormlySelectModule, FormlyModule.forChild({\n      types: [{\n        name: 'select',\n        component: FormlyFieldSelect,\n        wrappers: ['form-field']\n      }, {\n        name: 'enum',\n        extends: 'select'\n      }]\n    })]]\n  });\n  return FormlyMatSelectModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { FormlyFieldSelect, FormlyMatSelectModule }; //# sourceMappingURL=ngx-formly-material-select.mjs.map","map":null,"metadata":{},"sourceType":"module"}