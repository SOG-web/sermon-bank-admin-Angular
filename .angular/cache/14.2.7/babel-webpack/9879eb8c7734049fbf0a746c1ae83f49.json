{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/fire/compat/auth\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(router, fireAuth) {\n      this.router = router;\n      this.fireAuth = fireAuth;\n      this.userLoggedIn = false;\n      this.fireAuth.onAuthStateChanged(user => {\n        if (user) {\n          this.userLoggedIn = true;\n        } else {\n          this.userLoggedIn = false;\n        }\n      });\n    }\n\n    login(value) {\n      return __awaiter(this, void 0, void 0, function* () {\n        return this.fireAuth.signInWithEmailAndPassword(value.email, value.password).then(result => {\n          var _a;\n\n          if ((_a = result.user) === null || _a === void 0 ? void 0 : _a.emailVerified) {\n            this.userLoggedIn = true;\n            console.log('User logged in');\n            return result.user;\n          } else {\n            this.userLoggedIn = false;\n            return {\n              state: 'error',\n              message: 'Please verify your email address'\n            };\n          }\n        }).catch(error => {\n          if (error.code === 'auth/invalid-email') {\n            return {\n              state: 'error',\n              message: 'Invalid email'\n            };\n          } else if (error.code === 'auth/user-disabled') {\n            return {\n              state: 'error',\n              message: 'User disabled'\n            };\n          } else if (error.code === 'auth/user-not-found') {\n            return {\n              state: 'error',\n              message: 'User not found'\n            };\n          } else if (error.code === 'auth/wrong-password') {\n            return {\n              state: 'error',\n              message: 'Wrong password'\n            };\n          }\n\n          return {\n            state: 'error',\n            message: error\n          };\n        });\n      });\n    }\n\n    logout() {\n      return __awaiter(this, void 0, void 0, function* () {\n        return this.fireAuth.signOut().then(() => {\n          this.router.navigate(['/login']); // when we log the user out, navigate them to home\n        }).catch(error => {\n          console.log('Auth Service: logout error...');\n          console.log('error code', error.code);\n          console.log('error', error);\n          if (error.code) return error;\n        });\n      });\n    } // TODO -- reset password\n\n\n    resetPassword(email) {\n      return __awaiter(this, void 0, void 0, function* () {\n        try {\n          yield this.fireAuth.sendPasswordResetEmail(email);\n          console.log('Password reset email sent');\n          return {\n            status: true\n          };\n        } catch (error) {\n          console.log('Error sending password reset email'); // @ts-ignore\n\n          console.log('error code', error.code);\n          console.log('error', error); // @ts-ignore\n\n          if (error.code) {\n            // @ts-ignore\n            return {\n              error\n            };\n          }\n\n          return {\n            error\n          };\n        }\n      });\n    }\n\n  }\n\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.AngularFireAuth));\n  };\n\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module"}