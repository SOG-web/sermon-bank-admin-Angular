{"ast":null,"code":"import { ActivatedRouteSnapshot, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { onAuthStateChanged, authInstance$ } from '@angular/fire/auth';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport let AuthGuard = /*#__PURE__*/(() => {\n  class AuthGuard {\n    constructor(router) {\n      this.router = router;\n    }\n\n    canActivate(route, state) {\n      return new Promise((resolve, reject) => {\n        onAuthStateChanged(authInstance$, user => {\n          if (user) {\n            resolve(true);\n          } else {\n            this.router.navigate(['/auth']);\n            resolve(false);\n          }\n        });\n      });\n    }\n\n  }\n\n  AuthGuard.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.Router));\n  };\n\n  AuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthGuard;\n})();","map":null,"metadata":{},"sourceType":"module"}